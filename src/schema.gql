# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Bootcamp {
  _id: String!
  acceptGi: Boolean!
  address: String!
  averageCost: Float!
  averageRating: Float!
  careers: Careers!
  courses: [Course!]
  createdAt: DateTime!
  description: String!
  email: String!
  housing: Boolean!
  jobAssistance: Boolean!
  jobGuarantee: Boolean!
  name: String!
  phone: String!
  photo: String!
  slug: String!
  updatedAt: DateTime!
  user: String!
  website: String!
}

input BootcampID {
  id: String!
}

"""The supported careers."""
enum Careers {
  BUSINESS
  DATA_SCIENCE
  MOBILE_DEVELOPMENT
  OTHER
  UI_UX
  WEB_DEVELOPMENT
}

type Course {
  _id: String!
  bootcamp: Bootcamp!
  createdAt: DateTime!
  description: String!
  minimumSkill: Skill!
  scholarshipAvailable: Boolean!
  title: String!
  tuition: Float!
  updatedAt: DateTime!
  user: String!
  weeks: Float!
}

input CourseID {
  id: String!
}

input CreateBootcamp {
  acceptGi: Boolean!
  address: String!
  careers: Careers!
  description: String!
  email: String!
  housing: Boolean!
  jobAssistance: Boolean!
  jobGuarantee: Boolean!
  name: String!
  phone: String!
  website: String!
}

input CreateCourse {
  bootcamp: String!
  description: String!
  minimumSkill: Skill!
  scholarshipAvailable: Boolean!
  title: String!
  tuition: Float!
  weeks: Float!
}

input CreateUser {
  email: String!
  password: String!
  role: Roles!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

input LoginUser {
  email: String!
  password: String!
}

type Mutation {
  createBootcamp(createBootcamp: CreateBootcamp!): Bootcamp!
  createCourse(createCourse: CreateCourse!): Course!
  deleteBootcamp(_id: BootcampID!): Bootcamp!
  deleteCourse(_id: CourseID!): Course!
  login(loginUser: LoginUser!): Token!
  register(registerUser: CreateUser!): User!
  updateBootcamp(_id: BootcampID!, updateBootcamp: UpdateBootcamp!): Bootcamp!
  updateCourse(_id: CourseID!, updateCourse: UpdateCourse!): Course!
}

type Query {
  bootcamp(_id: BootcampID!): Bootcamp!
  bootcamps: [Bootcamp!]!
  course(_id: CourseID!): Course!
  courses: [Course!]!
}

"""The supported roles."""
enum Roles {
  ADMIN
  PUBLISHER
  USER
}

"""The supported careers."""
enum Skill {
  ADVANCED
  BEGINNER
  INTERMEDIATE
}

type Token {
  accessToken: String!
}

input UpdateBootcamp {
  acceptGi: Boolean
  address: String
  careers: Careers
  description: String
  email: String
  housing: Boolean
  jobAssistance: Boolean
  jobGuarantee: Boolean
  name: String
  phone: String
  website: String
}

input UpdateCourse {
  description: String!
  scholarshipAvailable: Boolean!
  title: String!
  tuition: Float!
  weeks: Float!
}

type User {
  _id: String!
  email: String!
  password: String!
  role: Roles!
}
